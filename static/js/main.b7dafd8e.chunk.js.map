{"version":3,"sources":["components/Header/header.jsx","utils/API.jsx","components/Table/tableData.jsx","components/Search/searchBtn.jsx","components/Table/table.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","className","axios","get","TableData","props","scope","onClick","handleSort","id","class","users","map","user","key","email","src","picture","medium","alt","name","first","last","phone","location","country","SearchBtn","onChange","handleChange","type","placeholder","aria-label","value","search","Table","state","originalUsers","filteredUsers","usersArr","API","then","res","setState","data","results","catch","err","console","log","e","target","filter","toLowerCase","startsWith","sortedUsersUp","sort","a","b","sortedUsersDown","this","React","Component","App","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.b7dafd8e.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./header.css\";\n\n\nfunction Header() {\n  return (\n    <div className=\"jumbotron jumbotron-fluid header\">\n      <div className=\"container\">\n        <h1 className=\"display-4\">Employee Directory</h1>\n        <p className=\"lead\">See all our employees.<br></br>You may reorganized the table by name, phone, email, country where office is located, <br></br>or filter specific employees by their names</p>\n      </div>\n    </div>\n  )\n}\n\nexport default Header;\n\n","import axios from \"axios\";\n\nexport default {\n  getUsers: function () {\n    return axios.get(\"https://randomuser.me/api/?results=10\")\n  }\n}","import React from \"react\";\n\nfunction TableData(props) {\n    return (\n      <table className=\"table\">\n        <thead className=\"thead-dark\">\n          <tr>\n            <th scope=\"col\">Photo</th>\n            <th scope=\"col\">Name<span onClick={props.handleSort}><i id=\"name\" className={props.class}></i></span></th>\n            <th scope=\"col\">Phone<span onClick={props.handleSort}><i id=\"phone\" className={props.class}></i></span></th>\n            <th scope=\"col\">Email<span onClick={props.handleSort}><i id=\"email\" className={props.class}></i></span></th>\n            <th scope=\"col\">Country of Office<span onClick={props.handleSort}><i id=\"country\" className={props.class}></i></span></th>\n          </tr>\n        </thead>\n        <tbody>\n        {props.users.map(user => (\n          <tr key={user.email}>\n            <td><img src={user.picture.medium} alt=\"employeePhoto\" /></td>\n            <td>{user.name.first} {user.name.last}</td>\n            <td>{user.phone}</td>\n            <td>{user.email}</td>\n            <td>{user.location.country}</td>\n          </tr>\n        ))}\n        </tbody>\n      </table>\n    )\n}//end TableData\n\nexport default TableData;","import React from \"react\";\nimport \"./searchBtn.css\";\n\nfunction SearchBtn(props) {\n  return (\n    <nav className=\"navbar navbar-collapse bg-dark\">\n\n        <input\n        onChange={props.handleChange}\n        className=\"form-control mr-sm-2\"\n        type=\"text\"\n        placeholder=\"Look Me Up\"\n        aria-label=\"Search\"\n        name=\"search\"\n        value={props.search}\n        />\n        \n    </nav>\n  )\n}\nexport default SearchBtn;\n\n","import React from \"react\";\nimport \"./table.css\";\nimport API from \"../../utils/API\";\nimport TableData from \"./tableData\";\nimport SearchBtn from \"../Search/searchBtn\";\n\nclass Table extends React.Component {\n  state = {\n    search: \"\",\n    className: \"fa fa-fw fa-sort up\",\n    originalUsers: [],\n    filteredUsers: [],\n  };\n  //activate the usersArr function that will populate state.users\n  componentDidMount() {\n    this.usersArr();\n  }\n\n  //Get user from the function that uses axios on the API file\n  usersArr = () => {\n    API.getUsers()\n      .then(res => this.setState({ originalUsers: res.data.results, filteredUsers: res.data.results }))\n      .catch(err => console.log(err));\n  }\n\n  //function in charge of filtering users\n  handleChange = e => {\n    const { name, value } = e.target;\n\n    this.setState({\n      [name]: value\n    });\n\n    // This if statement is for when someone hits backspace and makes input empty\n    if (value === \"\") {\n      this.setState({ filteredUsers: this.state.originalUsers })\n      //if start typing, we start filtering users\n    } else if (value !== \"\") {\n      const filteredUsers = this.state.originalUsers.filter(data =>\n        data.name.first.toLowerCase().startsWith(value.toLowerCase()) || data.name.last.toLowerCase().startsWith(value.toLowerCase()) || (`${data.name.first} ${data.name.last}`).toLowerCase().startsWith(value.toLowerCase())\n      );\n      this.setState({ filteredUsers });\n    }\n  };\n\n  //function in charge of changing the class name. It'll be called onsorted users function\n  className = (className) => {\n    if(className === \"fa fa-fw fa-sort up\"){\n      this.setState({ className: \"fa fa-fw fa-sort down\" })\n    } else if(className === \"fa fa-fw fa-sort down\"){\n      this.setState({ className: \"fa fa-fw fa-sort up\" })\n    }\n  }\n\n  //function to sort users ascending or descending\n  handleSort = e => {\n    let {className, id} = e.target\n    \n    //order by name\n    if(className === \"fa fa-fw fa-sort up\" && id === \"name\"){\n      const sortedUsersUp = this.state.filteredUsers.sort((a, b) => (a.name.first.toLowerCase() > b.name.first.toLowerCase()) ? 1 : -1)\n      this.className(className)\n      this.setState({ filteredUsers: sortedUsersUp });\n    } else if(className === \"fa fa-fw fa-sort down\" && id === \"name\"){\n      const sortedUsersDown = this.state.filteredUsers.sort((a, b) => (a.name.first.toLowerCase() < b.name.first.toLowerCase()) ? 1 : -1)\n      this.className(className)\n      this.setState({ filteredUsers: sortedUsersDown });\n\n      //order by phone\n    } else if(className === \"fa fa-fw fa-sort up\" && id === \"phone\"){\n      const sortedUsersUp = this.state.filteredUsers.sort((a, b) => (a.phone > b.phone) ? 1 : -1)\n      this.className(className)\n      this.setState({ filteredUsers: sortedUsersUp });\n    } else if(className === \"fa fa-fw fa-sort down\" && id === \"phone\"){\n      const sortedUsersDown = this.state.filteredUsers.sort((a, b) => (a.phone < b.phone) ? 1 : -1)\n      this.className(className)\n      this.setState({ filteredUsers: sortedUsersDown });\n\n      //order by email\n    } else if(className === \"fa fa-fw fa-sort up\" && id === \"email\"){\n      const sortedUsersUp = this.state.filteredUsers.sort((a, b) => (a.email > b.email) ? 1 : -1)\n      this.className(className)\n      this.setState({ filteredUsers: sortedUsersUp });\n    } else if(className === \"fa fa-fw fa-sort down\" && id === \"email\"){\n      const sortedUsersDown = this.state.filteredUsers.sort((a, b) => (a.email < b.email) ? 1 : -1)\n      this.className(className)\n      this.setState({ filteredUsers: sortedUsersDown });\n\n      //order by country\n    } else if(className === \"fa fa-fw fa-sort up\" && id === \"country\"){\n      const sortedUsersUp = this.state.filteredUsers.sort((a, b) => (a.location.country.toLowerCase() > b.location.country.toLowerCase()) ? 1 : -1)\n      this.className(className)\n      this.setState({ filteredUsers: sortedUsersUp });\n    } else if(className === \"fa fa-fw fa-sort down\" && id === \"country\"){\n      const sortedUsersDown = this.state.filteredUsers.sort((a, b) => (a.location.country.toLowerCase() < b.location.country.toLowerCase()) ? 1 : -1)\n      this.className(className)\n      this.setState({ filteredUsers: sortedUsersDown });\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <SearchBtn\n          search={this.state.search}\n          handleChange={this.handleChange}\n        />\n        <TableData\n          users={this.state.filteredUsers}\n          handleSort={this.handleSort}\n          class={this.state.className}\n        />\n      </div>\n    )\n  }//end render\n\n}//end component\n\nexport default Table;\n","import React from 'react';\nimport Header from \"./components/Header/header\";\nimport Table from \"./components/Table/table\";\n\nfunction App() {\n  return (\n    <div>\n      <Header />\n      <Table /> \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}